name: Build & Release (per-module)

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write  # needed for gh-release to upload assets

jobs:
  build:
    name: Build ${{ matrix.module }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module:
          - ControlBans
          - ControlBans-Bungee
          - ControlBans-Velocity

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 17 (with Maven cache)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      # Build the module by pointing Maven at that module's pom.xml
      - name: Build ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: |
          echo "Building ${{ matrix.module }} from $(pwd)"
          mvn -B -e -DskipTests clean package

      # Upload all built jars for this module (adjust glob if you only want shaded jars)
      - name: Upload artifacts (${{ matrix.module }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }}-artifacts
          path: |
            ${{ matrix.module }}/target/*.jar
          if-no-files-found: error

  release:
    name: Publish GitHub Release (on tag)
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      # Optional: show what's going to be released
      - name: List files
        run: |
          echo "Contents of dist/"
          find dist -type f -name "*.jar" -maxdepth 3 -print

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
